---
import { Star, ChevronLeft, ChevronRight, Quote } from "@lucide/astro";

// Datos de los testimonios
const testimonials = [
  {
    name: "Carlos Mendoza",
    photo: "/images/testimonials/carlos.webp", 
    position: "Frontend Developer en Globant Perú",
    testimonial: "Después de 6 meses de formación intensiva en Orbi, conseguí mi primer empleo tech con un salario que triplicó mis ingresos anteriores. La metodología práctica y el enfoque en proyectos reales fue exactamente lo que necesitaba.",
    achievement: "300% de incremento salarial",
    program: "Desarrollo Web Full Stack",
    rating: 5
  },
  {
    name: "Luciana Paredes",
    photo: "/images/testimonials/luciana.webp",
    position: "UX/UI Designer en Interbank",
    testimonial: "Venía de una carrera completamente diferente, pero Orbi me dio las herramientas y la confianza para hacer la transición. El acompañamiento personalizado hizo toda la diferencia. Ahora trabajo en lo que me apasiona.",
    achievement: "Empleada en 45 días después de graduarse",
    program: "Diseño UX/UI",
    rating: 5
  },
  {
    name: "Miguel Sánchez",
    photo: "/images/testimonials/miguel.webp",
    position: "Tech Lead en Falabella Tech",
    testimonial: "Los graduados de Orbi llegan con habilidades prácticas que los hacen productivos desde el primer día. Su conocimiento del mercado peruano y la capacidad para resolver problemas reales los hace destacar frente a otros candidatos.",
    achievement: "Ha contratado a 5 graduados de Orbi",
    program: "Reclutador",
    rating: 5
  },
  {
    name: "Andrea Fuentes",
    photo: "/images/testimonials/andrea.webp",
    position: "Co-fundadora de DataPerú",
    testimonial: "Los conocimientos en ciencia de datos que adquirí en Orbi me dieron la confianza para iniciar mi propio emprendimiento. Ahora lideramos proyectos de análisis de datos para empresas peruanas y seguimos creciendo.",
    achievement: "Fundó su startup 8 meses después de graduarse",
    program: "Ciencia de Datos",
    rating: 5
  }
];
---

<section id="testimonios" class="py-16 md:py-24 bg-gradient-to-br from-gray-50 to-white relative overflow-hidden">
  <!-- Elementos decorativos de fondo -->
  <div class="absolute inset-0 overflow-hidden">
    <div class="absolute -right-24 -top-24 w-96 h-96 rounded-full bg-red-800/5"></div>
    <div class="absolute -left-20 bottom-1/3 w-64 h-64 rounded-full bg-red-800/5"></div>
  </div>

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative">
    <!-- Encabezado de sección con estética MD3 -->
    <div class="text-center mb-12 md:mb-20">
      <div class="inline-block mb-3">
        <div class="h-1.5 w-16 bg-red-800 rounded-full mb-2 mx-auto"></div>
      </div>
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4 tracking-tight">
        Lo que dicen nuestros <span class="text-red-800">graduados</span>
      </h2>
      <p class="max-w-2xl mx-auto text-lg text-gray-600 leading-relaxed">
        Historias reales de éxito en la industria tech peruana
      </p>
    </div>

    <!-- Carrusel de testimonios -->
    <div class="relative" id="testimonials-carousel">
      <!-- Testimonios -->
      <div class="overflow-hidden relative">
        <div 
          class="flex transition-transform duration-500 ease-in-out"
          id="testimonials-slider"
        >
          {testimonials.map((testimonial, index) => (
            <div class="w-full flex-shrink-0 px-4 md:px-10">
              <div class="bg-white rounded-3xl shadow-md md:shadow-lg p-6 md:p-8 relative transform transition-all duration-300 hover:-translate-y-1 hover:shadow-lg group">
                <!-- Comilla decorativa -->
                <div class="absolute -top-3 -left-3 text-red-800/10 transform group-hover:scale-110 transition-transform duration-300">
                  <Quote size={40} stroke-width={1.5} />
                </div>
                
                <div class="flex flex-col md:flex-row md:items-start gap-6 md:gap-8">
                  <!-- Foto y nombre -->
                  <div class="flex flex-col items-center md:items-start flex-shrink-0">
                    <div class="w-20 h-20 md:w-24 md:h-24 mb-3 relative">
                      <div class="absolute inset-0 rounded-full bg-gradient-to-br from-red-100 to-red-200 animate-pulse"></div>
                      <img 
                        src={testimonial.photo || `https://ui-avatars.com/api/?name=${encodeURIComponent(testimonial.name)}&background=F8FAFC&color=991B1B&size=175`}
                        alt={`Foto de ${testimonial.name}`}
                        class="w-full h-full object-cover rounded-full border-2 border-white shadow-sm relative z-10"
                        onerror="this.onerror=null;this.src=`https://ui-avatars.com/api/?name=${encodeURIComponent(this.alt.replace('Foto de ', ''))}&background=F8FAFC&color=991B1B&size=175`"
                      />
                    </div>
                    <h4 class="font-bold text-lg text-gray-900">{testimonial.name}</h4>
                    <p class="text-sm text-gray-600 text-center md:text-left">{testimonial.position}</p>
                    
                    <!-- Estrellas de valoración -->
                    <div class="flex items-center mt-2">
                      {Array.from({ length: 5 }).map((_, i) => (
                        <Star 
                          size={16} 
                          class={i < testimonial.rating ? "text-yellow-500 fill-yellow-500" : "text-gray-300"} 
                          stroke-width={1.5}
                        />
                      ))}
                    </div>
                  </div>
                  
                  <!-- Testimonio y logro -->
                    <div class="flex-1">
                    <!-- Testimonio con estilo MD3 -->
                    <blockquote class="italic text-gray-700 mb-6 relative p-4 bg-white rounded-2xl shadow-sm border border-gray-100/70 group-hover:border-red-100 transition-colors duration-300">
                        <div class="absolute inset-0 bg-gradient-to-br from-red-800/2 to-transparent rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                        <div class="relative z-10">"{testimonial.testimonial}"</div>
                    </blockquote>
                    
                        <div class="flex flex-col md:flex-row md:items-center gap-4 md:gap-5 mt-6 md:mt-7">
                        <!-- Logro con estilo MD3 mejorado -->
                        <div class="flex items-center bg-gradient-to-r from-red-50 to-red-100/80 rounded-2xl px-5 py-3 shadow-sm   border-red-800/40 transition-all duration-300 group-hover:shadow-md group-hover:-translate-y-1">
                            <div class="w-4 h-4 bg-red-800/30 rounded-full mr-3 group-hover:scale-110 transition-transform duration-300"></div>
                            <div>
                            <span class="text-xs text-red-700 font-medium uppercase tracking-wider block mb-0.5">Logro destacado</span>
                            <span class="text-sm text-red-900 font-bold">{testimonial.achievement}</span>
                            </div>
                        </div>
                        
                        <!-- Programa con estilo MD3 mejorado -->
                        <div class="flex items-center bg-gradient-to-r from-gray-50 to-gray-100/80 rounded-2xl px-5 py-3 shadow-sm  border-red-800/20 transition-all duration-300 group-hover:shadow-md group-hover:-translate-y-1">
                            <div class="w-4 h-4 bg-red-800/20 rounded-full mr-3 group-hover:scale-110 transition-transform duration-300"></div>
                            <div>
                            <span class="text-xs text-gray-500 font-medium uppercase tracking-wider block mb-0.5">Programa</span>
                            <span class="text-sm text-gray-800 font-bold">{testimonial.program}</span>
                            </div>
                        </div>
                        </div>
                    </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
      
      <!-- Controles de navegación -->
      <div class="flex justify-center items-center mt-8 md:mt-12">
        <button 
          class="mx-2 w-10 h-10 rounded-full border border-gray-300 flex items-center justify-center text-gray-600 hover:bg-red-50 hover:border-red-200 hover:text-red-800 transition-colors duration-200"
          id="prev-btn"
          aria-label="Testimonio anterior"
        >
          <ChevronLeft size={20} stroke-width={2} />
        </button>
        
        <!-- Indicadores de posición -->
        <div class="flex mx-4" id="carousel-indicators">
          {testimonials.map((_, index) => (
            <button 
              class={`w-2.5 h-2.5 rounded-full mx-1.5 transition-all duration-300 ${index === 0 ? "bg-red-800 scale-110" : "bg-gray-300 hover:bg-gray-400"}`}
              data-index={index}
              aria-label={`Ver testimonio ${index + 1}`}
            ></button>
          ))}
        </div>
        
        <button 
          class="mx-2 w-10 h-10 rounded-full border border-gray-300 flex items-center justify-center text-gray-600 hover:bg-red-50 hover:border-red-200 hover:text-red-800 transition-colors duration-200"
          id="next-btn"
          aria-label="Testimonio siguiente"
        >
          <ChevronRight size={20} stroke-width={2} />
        </button>
      </div>
      
      <!-- CTA -->
      <div class="mt-12 md:mt-16 text-center">
        <a 
          href="#conoce-mas" 
          class="inline-flex items-center justify-center rounded-full bg-white border border-red-800 px-6 py-3 text-base font-medium text-red-800 shadow-sm hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-red-800 focus:ring-offset-2 transition-all ease-in-out duration-200"
        >
          Conoce más historias de éxito
        </a>
      </div>
    </div>
  </div>
</section>

<script>
    // Carrusel con JavaScript puro
    document.addEventListener('DOMContentLoaded', () => {
      const slider = document.getElementById('testimonials-slider');
      const prevBtn = document.getElementById('prev-btn');
      const nextBtn = document.getElementById('next-btn');
      const indicators = document.querySelectorAll('#carousel-indicators button');
      const totalSlides = indicators.length;
      
      let activeSlide = 0;
      let autoplayInterval: ReturnType<typeof setInterval>;
  
      // Verifica que todos los elementos existan
      if (!slider || !prevBtn || !nextBtn) {
        console.error('Elementos del carrusel no encontrados');
        return;
      }
  
      // Función para actualizar el carrusel
      function updateCarousel(slideIndex: number): void {
        activeSlide = slideIndex;
        
        // Actualiza la posición del slider
        if (slider) {
          slider.style.transform = `translateX(-${activeSlide * 100}%)`;
        }
        
        // Actualiza los indicadores
        indicators.forEach((indicator, index) => {
          if (index === activeSlide) {
            indicator.classList.add('bg-red-800', 'scale-110');
            indicator.classList.remove('bg-gray-300');
          } else {
            indicator.classList.remove('bg-red-800', 'scale-110');
            indicator.classList.add('bg-gray-300');
          }
        });
      }
  
      // Configurar botones de navegación
      prevBtn.addEventListener('click', () => {
        resetAutoplay();
        const newIndex = (activeSlide - 1 + totalSlides) % totalSlides;
        updateCarousel(newIndex);
      });
  
      nextBtn.addEventListener('click', () => {
        resetAutoplay();
        const newIndex = (activeSlide + 1) % totalSlides;
        updateCarousel(newIndex);
      });
  
      // Configurar indicadores
      indicators.forEach((indicator, index) => {
        indicator.addEventListener('click', () => {
          resetAutoplay();
          updateCarousel(index);
        });
      });
  
      // Autoplay
      function startAutoplay(): void {
        clearInterval(autoplayInterval); // Limpiar cualquier intervalo existente
        autoplayInterval = setInterval(() => {
          const newIndex = (activeSlide + 1) % totalSlides;
          updateCarousel(newIndex);
        }, 10000);
      }
  
      function resetAutoplay(): void {
        clearInterval(autoplayInterval);
        startAutoplay();
      }
  
      // Iniciar autoplay
      startAutoplay();
  
      // Soporte para gestos táctiles
      let touchStartX = 0;
      let touchEndX = 0;
      
      slider.addEventListener('touchstart', (e) => {
        touchStartX = e.changedTouches[0].screenX;
      }, { passive: true });
      
      slider.addEventListener('touchend', (e) => {
        touchEndX = e.changedTouches[0].screenX;
        handleGesture();
      }, { passive: true });
      
      function handleGesture(): void {
        if (touchEndX < touchStartX - 50) {
          // Deslizamiento hacia la izquierda - siguiente slide
          if (nextBtn) {
            nextBtn.click();
          }
        } else if (touchEndX > touchStartX + 50) {
          // Deslizamiento hacia la derecha - slide anterior
          if (prevBtn) {
            prevBtn.click();
          }
        }
      }
    });
  </script>

<style>
  @keyframes pulse {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.7; }
  }
  .animate-pulse {
    animation: pulse 3s ease-in-out infinite;
  }
</style>